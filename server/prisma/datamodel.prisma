type User {
  id: ID! @unique @id
  ip: String!
  fingerprint: String!
  gender: GenderType!
  lookingFor: [GenderObject!]!
  age: Int!
  minAge: Int!
  maxAge: Int!
  audioPref: AudioPrefType!
  accAudioPrefs: [AudioPrefObject!]!
  lastActive: DateTime!
  isHost: Boolean!
  isConnected: Boolean!
  visited: [User!]! @relation(name: "VisitedUsers", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Feedback {
  id: ID! @unique @id
  text: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type GenderObject {
  id: ID! @unique @id
  name: GenderType! @unique
}

enum GenderType {
  MALE
  FEMALE
  M2F
  F2M
}

type AudioPrefObject {
  id: ID! @unique @id
  name: AudioPrefType! @unique
}

enum AudioPrefType {
  NO_AUDIO
  MOANS
  CONVERSATION
  CHAT_FIRST
}