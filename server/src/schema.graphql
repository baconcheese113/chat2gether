# import * from './generated/prisma.graphql'

# typedefs
type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User!]!
  user(where: UserWhereUniqueInput!): User
  me: User!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UserUpdateInput!): User!
  createFeedback(data: FeedbackCreateInput!): Feedback!
}

# type Subscription {

# }

type AuthPayload {
  user: User!
}

input CreateUserInput {
  gender: GenderType!
  lookingFor: GenderType!
}
type User {
  id: ID!
  ip: String
  fingerprint: String
  gender: GenderType!
  lookingFor: [GenderType!]!
  age: Int!
  minAge: Int!
  maxAge: Int!
  lastActive: String!
  isHost: Boolean!
  isConnected: Boolean!
  visited: [User!]!
  updatedAt: String!
  createdAt: String!
}
enum MutationType {
  CREATED
  UPDATED
  DELETED
}
enum GenderType {
  MALE
  FEMALE
  M2F
  F2M
}

type Feedback {
  id: ID!
  text: String!
  updatedAt: String!
  createdAt: String!
}
